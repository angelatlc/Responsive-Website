As stated in earlier readings (Arpaci-Dusseau & Arpaci-Dusseau, 2012), modern computers increase efficiency and response time by allowing multiple programs to share system resources, like the CPU and main memory.  Indeed, they argue that memory management is one of the most important jobs that an operating system performs; with its goals being to increase efficiency, protect the OS and other programs from one another, and doing all of this behind the scenes and without programs being aware.  Memory can be virtualized with two basic approaches, segmentation and paging; but Arpaci-Dusseau & Arpaci-Dusseau recommend using a dialectic approach that incorporates both (2012). Specifically, they discuss the use of “multi-level page tables”, which are themselves broken down to fit onto a page in such a way that sparse areas of the address space are not allocated but ignored.  Moreover, they suggest that even this dialectic approach is not efficient enough, and recommend the use of “swapping” page tables to disk as a way of alleviating the burden on main memory. That said, even page swapping would be inefficient if it were not for caching often-used addresses onto the TLB as opposed to accessing the page tables on disk (Arpaci-Dusseau & Arpaci-Dusseau, 2012).

Newer Memory Management Technologies

According to the Sonar Systems Group at the University of Wisconsin (2017), the paging of virtual memory will evolve from being stored on traditional disk to solid-state flash memory as the price of this technology drops.  Their research has shown that their FlashVM system can drop the execution time of programs by 94 percent as well as reduce “garbage collection” times by a factor of ten. This research group has also shown that solid-state technology can be applied to a cache.  When running simulations on their FlashTier cache technology, they found that “FlashTier reduces address translation space by 60% and silent eviction improves performance by up to 167%. Furthermore, FlashTier can recover from the crash of a 100GB cache in only 2.4 seconds.” (Sonar Systems Group, 2017).


According to Bigelow (2016), systems can even perform “memory compression” instead of traditional caching as a main memory space-saving technique.  Instead of doing traditional swapping,


“the idle memory page is first compressed and then it is stored to a small area of the VM's memory set aside as a memory compression cache [..., freeing...] memory and allows greater levels of memory overcommitment. When compressed memory pages are needed later, it's a much faster process to retrieve compressed pages from the cache, decompress the pages, and restore the pages to working memory than it would be to retrieve them uncompressed from a swap file”(Bigelow, 2016).


There is a tradeoff with memory compression--the time it takes to decompress.  However, this should be substantially less than the time costs of retrieving swapped files from disk.


There are even innovations in how caches synchronize.  For example, researchers at MIT developed a directory system that increases memory efficiency by anywhere from 30% to 96%, depending on the size of the core chip being used (Hardesty, 2015).  According to Hardesty, their method ensure cache coherency by determining “which cores are working on that data and sends them messages invalidating their locally stored copies of it” (2015). My understanding of their method is that the caches are not using the traditional physical, and therefore objective, timestamp to determine which process has updated last, instead each cache is using an internal timestamp to keep track.


References


Arpaci-Dusseau, R. & Arpaci-Dusseau, A. (2012). Operating Systems: Three Easy Pieces. Madison, WI: University of Wisconsin-Madison. Retrieved from http://pages.cs.wisc.edu/~remzi/OSTEP//


Bigelow, S.J. (2016). How does memory compression compare to page swapping?. TechTarget. Retrieved from https://searchservervirtualization.techtarget.com/answer/How-does-memory-compression-compare-to-page-swapping


Hardesty, L. (2015). How new memory management is changing computer chip technology.  World Economic Forum. Retrieved from https://www.weforum.org/agenda/2015/09/how-new-memory-management-is-changing-computer-chip-technology/


Sonar Systems Group (2017).  University of Wisconsin. Retrieved from

http://research.cs.wisc.edu/sonar/projects/memory_technology/index.html


